

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 16 09:42:14 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F25K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	nvCOMRAM
    53  000005                     __pnvCOMRAM:
    54                           	callstack 0
    55  000005                     _i:
    56                           	callstack 0
    57  000005                     	ds	2
    58  000007                     _D:
    59                           	callstack 0
    60  000007                     	ds	1
    61  0000                     _CCP1CONbits	set	4029
    62  0000                     _TRISC	set	3988
    63  0000                     _PIR1	set	3998
    64  0000                     _CCP1CON	set	4029
    65  0000                     _T2CON	set	4042
    66  0000                     _PR2	set	4043
    67  0000                     _TMR2	set	4044
    68  0000                     _CCPR1L	set	4030
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  007F0E                     __pcinit:
    74                           	callstack 0
    75  007F0E                     start_initialization:
    76                           	callstack 0
    77  007F0E                     __initialization:
    78                           	callstack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (4 bytes)
    81  007F0E  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    82  007F10  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    83  007F12  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    84  007F14  6A01               	clrf	__pbssCOMRAM& (0+255),c
    85  007F16                     end_of_initialization:
    86                           	callstack 0
    87  007F16                     __end_of__initialization:
    88                           	callstack 0
    89  007F16  0100               	movlb	0
    90  007F18  EF98  F03F         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	bssCOMRAM
    93  000001                     __pbssCOMRAM:
    94                           	callstack 0
    95  000001                     _j:
    96                           	callstack 0
    97  000001                     	ds	2
    98  000003                     _b:
    99                           	callstack 0
   100  000003                     	ds	1
   101  000004                     _a:
   102                           	callstack 0
   103  000004                     	ds	1
   104                           
   105                           	psect	cstackCOMRAM
   106  000008                     __pcstackCOMRAM:
   107                           	callstack 0
   108  000008                     ??_main:
   109                           
   110                           ; 1 bytes @ 0x0
   111  000008                     	ds	1
   112                           
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 81 in file "mainPWM.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;		None
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2, status,0, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : 0/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   132 ;;      Params:         0       0       0       0       0       0       0
   133 ;;      Locals:         0       0       0       0       0       0       0
   134 ;;      Temps:          1       0       0       0       0       0       0
   135 ;;      Totals:         1       0       0       0       0       0       0
   136 ;;Total ram usage:        1 bytes
   137 ;; Hardware stack levels required when called: 1
   138 ;; This function calls:
   139 ;;		_configTMR2_PWM
   140 ;; This function is called by:
   141 ;;		Startup code after reset
   142 ;; This function uses a non-reentrant model
   143 ;;
   144                           
   145                           	psect	text0
   146  007F30                     __ptext0:
   147                           	callstack 0
   148  007F30                     _main:
   149                           	callstack 30
   150  007F30                     
   151                           ;mainPWM.c: 83:     TRISC &= ~0x04;
   152  007F30  9494               	bcf	148,2,c	;volatile
   153  007F32                     
   154                           ;mainPWM.c: 84:     configTMR2_PWM();
   155  007F32  EC8E  F03F         	call	_configTMR2_PWM	;wreg free
   156  007F36                     
   157                           ;mainPWM.c: 85:     CCP1CON = 0x0C;
   158  007F36  0E0C               	movlw	12
   159  007F38  6EBD               	movwf	189,c	;volatile
   160  007F3A                     l740:
   161                           
   162                           ;mainPWM.c: 87:     {;mainPWM.c: 88:         D = 0;
   163  007F3A  0E00               	movlw	0
   164  007F3C  6E07               	movwf	_D^0,c
   165  007F3E                     
   166                           ;mainPWM.c: 89:         for(i = 0; i<=500; i++)
   167  007F3E  0E00               	movlw	0
   168  007F40  6E06               	movwf	(_i+1)^0,c
   169  007F42  0E00               	movlw	0
   170  007F44  6E05               	movwf	_i^0,c
   171  007F46                     l36:
   172                           
   173                           ;mainPWM.c: 90:         {;mainPWM.c: 91:             a = (unsigned char)i;
   174  007F46  C005  F004         	movff	_i,_a
   175                           
   176                           ;mainPWM.c: 92:             D = a;
   177  007F4A  C004  F007         	movff	_a,_D
   178  007F4E                     
   179                           ;mainPWM.c: 93:             CCP1CONbits.DC1B0 = (D & 0x01);
   180  007F4E  C007  F008         	movff	_D,??_main
   181  007F52  0E01               	movlw	1
   182  007F54  1608               	andwf	??_main^0,f,c
   183  007F56  3A08               	swapf	??_main^0,f,c
   184  007F58  50BD               	movf	189,w,c	;volatile
   185  007F5A  1808               	xorwf	??_main^0,w,c
   186  007F5C  0BEF               	andlw	-17
   187  007F5E  1808               	xorwf	??_main^0,w,c
   188  007F60  6EBD               	movwf	189,c	;volatile
   189                           
   190                           ;mainPWM.c: 94:             CCPR1L = D>>1;
   191  007F62  90D8               	bcf	status,0,c
   192  007F64  3007               	rrcf	_D^0,w,c
   193  007F66  6EBE               	movwf	190,c	;volatile
   194  007F68                     
   195                           ;mainPWM.c: 95:             _delay((unsigned long)((10)*(12000000/4000.0)));
   196  007F68  0E27               	movlw	39
   197  007F6A  6E08               	movwf	??_main^0,c
   198  007F6C  0EF5               	movlw	245
   199  007F6E                     u37:
   200  007F6E  2EE8               	decfsz	wreg,f,c
   201  007F70  D7FE               	bra	u37
   202  007F72  2E08               	decfsz	??_main^0,f,c
   203  007F74  D7FC               	bra	u37
   204  007F76  F000               	nop	
   205                           
   206                           ;mainPWM.c: 96:         }
   207  007F78  4A05               	infsnz	_i^0,f,c
   208  007F7A  2A06               	incf	(_i+1)^0,f,c
   209  007F7C  BE06               	btfsc	(_i+1)^0,7,c
   210  007F7E  EFCA  F03F         	goto	u11
   211  007F82  0EF5               	movlw	245
   212  007F84  5C05               	subwf	_i^0,w,c
   213  007F86  0E01               	movlw	1
   214  007F88  5806               	subwfb	(_i+1)^0,w,c
   215  007F8A  A0D8               	btfss	status,0,c
   216  007F8C  EFCA  F03F         	goto	u11
   217  007F90  EFCC  F03F         	goto	u10
   218  007F94                     u11:
   219  007F94  EFA3  F03F         	goto	l36
   220  007F98                     u10:
   221  007F98                     
   222                           ;mainPWM.c: 98:         for(j = (int)a; j>=0; j--)
   223  007F98  C004  F001         	movff	_a,_j
   224  007F9C  6A02               	clrf	(_j+1)^0,c
   225  007F9E  EFED  F03F         	goto	l758
   226  007FA2                     l39:
   227                           
   228                           ;mainPWM.c: 99:         {;mainPWM.c: 100:             b = (unsigned char)j;
   229  007FA2  C001  F003         	movff	_j,_b
   230                           
   231                           ;mainPWM.c: 101:             D = b;
   232  007FA6  C003  F007         	movff	_b,_D
   233  007FAA                     
   234                           ;mainPWM.c: 102:             CCP1CONbits.DC1B0 = (D & 0x01);
   235  007FAA  C007  F008         	movff	_D,??_main
   236  007FAE  0E01               	movlw	1
   237  007FB0  1608               	andwf	??_main^0,f,c
   238  007FB2  3A08               	swapf	??_main^0,f,c
   239  007FB4  50BD               	movf	189,w,c	;volatile
   240  007FB6  1808               	xorwf	??_main^0,w,c
   241  007FB8  0BEF               	andlw	-17
   242  007FBA  1808               	xorwf	??_main^0,w,c
   243  007FBC  6EBD               	movwf	189,c	;volatile
   244                           
   245                           ;mainPWM.c: 103:             CCPR1L = D>>1;
   246  007FBE  90D8               	bcf	status,0,c
   247  007FC0  3007               	rrcf	_D^0,w,c
   248  007FC2  6EBE               	movwf	190,c	;volatile
   249  007FC4                     
   250                           ;mainPWM.c: 104:             _delay((unsigned long)((10)*(12000000/4000.0)));
   251  007FC4  0E27               	movlw	39
   252  007FC6  6E08               	movwf	??_main^0,c
   253  007FC8  0EF5               	movlw	245
   254  007FCA                     u47:
   255  007FCA  2EE8               	decfsz	wreg,f,c
   256  007FCC  D7FE               	bra	u47
   257  007FCE  2E08               	decfsz	??_main^0,f,c
   258  007FD0  D7FC               	bra	u47
   259  007FD2  F000               	nop	
   260                           
   261                           ;mainPWM.c: 105:         }
   262  007FD4  0601               	decf	_j^0,f,c
   263  007FD6  A0D8               	btfss	status,0,c
   264  007FD8  0602               	decf	(_j+1)^0,f,c
   265  007FDA                     l758:
   266  007FDA  BE02               	btfsc	(_j+1)^0,7,c
   267  007FDC  EFF4  F03F         	goto	u20
   268  007FE0  EFF2  F03F         	goto	u21
   269  007FE4                     u21:
   270  007FE4  EFD1  F03F         	goto	l39
   271  007FE8                     u20:
   272  007FE8                     
   273                           ;mainPWM.c: 106:         j=0;
   274  007FE8  0E00               	movlw	0
   275  007FEA  6E02               	movwf	(_j+1)^0,c
   276  007FEC  0E00               	movlw	0
   277  007FEE  6E01               	movwf	_j^0,c
   278                           
   279                           ;mainPWM.c: 107:         i=0;
   280  007FF0  0E00               	movlw	0
   281  007FF2  6E06               	movwf	(_i+1)^0,c
   282  007FF4  0E00               	movlw	0
   283  007FF6  6E05               	movwf	_i^0,c
   284  007FF8  EF9D  F03F         	goto	l740
   285  007FFC  EF00  F000         	goto	start
   286  008000                     __end_of_main:
   287                           	callstack 0
   288                           
   289 ;; *************** function _configTMR2_PWM *****************
   290 ;; Defined at:
   291 ;;		line 112 in file "mainPWM.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   305 ;;      Params:         0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used: 1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  007F1C                     __ptext1:
   320                           	callstack 0
   321  007F1C                     _configTMR2_PWM:
   322                           	callstack 30
   323  007F1C                     
   324                           ;mainPWM.c: 114:     PIR1 &= ~0x02;
   325  007F1C  929E               	bcf	158,1,c	;volatile
   326  007F1E                     
   327                           ;mainPWM.c: 115:     TMR2 = 0;
   328  007F1E  0E00               	movlw	0
   329  007F20  6ECC               	movwf	204,c	;volatile
   330  007F22                     
   331                           ;mainPWM.c: 116:     PR2 = 127;
   332  007F22  0E7F               	movlw	127
   333  007F24  6ECB               	movwf	203,c	;volatile
   334  007F26                     
   335                           ;mainPWM.c: 118:     T2CON |= 0x03;
   336  007F26  0E03               	movlw	3
   337  007F28  12CA               	iorwf	202,f,c	;volatile
   338  007F2A                     
   339                           ;mainPWM.c: 119:     T2CON &= ~0x04;
   340  007F2A  94CA               	bcf	202,2,c	;volatile
   341  007F2C                     
   342                           ;mainPWM.c: 121:     T2CON |= 0x04;
   343  007F2C  84CA               	bsf	202,2,c	;volatile
   344  007F2E  0012               	return		;funcret
   345  007F30                     __end_of_configTMR2_PWM:
   346                           	callstack 0
   347  0000                     
   348                           	psect	rparam
   349  0000                     
   350                           	psect	idloc
   351                           
   352                           ;Config register IDLOC0 @ 0x200000
   353                           ;	unspecified, using default values
   354  200000                     	org	2097152
   355  200000  FF                 	db	255
   356                           
   357                           ;Config register IDLOC1 @ 0x200001
   358                           ;	unspecified, using default values
   359  200001                     	org	2097153
   360  200001  FF                 	db	255
   361                           
   362                           ;Config register IDLOC2 @ 0x200002
   363                           ;	unspecified, using default values
   364  200002                     	org	2097154
   365  200002  FF                 	db	255
   366                           
   367                           ;Config register IDLOC3 @ 0x200003
   368                           ;	unspecified, using default values
   369  200003                     	org	2097155
   370  200003  FF                 	db	255
   371                           
   372                           ;Config register IDLOC4 @ 0x200004
   373                           ;	unspecified, using default values
   374  200004                     	org	2097156
   375  200004  FF                 	db	255
   376                           
   377                           ;Config register IDLOC5 @ 0x200005
   378                           ;	unspecified, using default values
   379  200005                     	org	2097157
   380  200005  FF                 	db	255
   381                           
   382                           ;Config register IDLOC6 @ 0x200006
   383                           ;	unspecified, using default values
   384  200006                     	org	2097158
   385  200006  FF                 	db	255
   386                           
   387                           ;Config register IDLOC7 @ 0x200007
   388                           ;	unspecified, using default values
   389  200007                     	org	2097159
   390  200007  FF                 	db	255
   391                           
   392                           	psect	config
   393                           
   394                           ; Padding undefined space
   395  300000                     	org	3145728
   396  300000  FF                 	db	255
   397                           
   398                           ;Config register CONFIG1H @ 0x300001
   399                           ;	Oscillator Selection bits
   400                           ;	FOSC = HS, HS oscillator
   401                           ;	Fail-Safe Clock Monitor Enable bit
   402                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   403                           ;	Internal/External Oscillator Switchover bit
   404                           ;	IESO = OFF, Oscillator Switchover mode disabled
   405  300001                     	org	3145729
   406  300001  02                 	db	2
   407                           
   408                           ;Config register CONFIG2L @ 0x300002
   409                           ;	Power-up Timer Enable bit
   410                           ;	PWRT = OFF, PWRT disabled
   411                           ;	Brown-out Reset Enable bits
   412                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   413                           ;	Brown Out Reset Voltage bits
   414                           ;	BORV = 18, VBOR set to 1.8 V nominal
   415  300002                     	org	3145730
   416  300002  1F                 	db	31
   417                           
   418                           ;Config register CONFIG2H @ 0x300003
   419                           ;	Watchdog Timer Enable bit
   420                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
   421                           ;	Watchdog Timer Postscale Select bits
   422                           ;	WDTPS = 32768, 1:32768
   423  300003                     	org	3145731
   424  300003  1F                 	db	31
   425                           
   426                           ; Padding undefined space
   427  300004                     	org	3145732
   428  300004  FF                 	db	255
   429                           
   430                           ;Config register CONFIG3H @ 0x300005
   431                           ;	CCP2 MUX bit
   432                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   433                           ;	PORTB A/D Enable bit
   434                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   435                           ;	Low-Power Timer1 Oscillator Enable bit
   436                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   437                           ;	HFINTOSC Fast Start-up
   438                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   439                           ;	MCLR Pin Enable bit
   440                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   441  300005                     	org	3145733
   442  300005  8B                 	db	139
   443                           
   444                           ;Config register CONFIG4L @ 0x300006
   445                           ;	Stack Full/Underflow Reset Enable bit
   446                           ;	STVREN = ON, Stack full/underflow will cause Reset
   447                           ;	Single-Supply ICSP Enable bit
   448                           ;	LVP = ON, Single-Supply ICSP enabled
   449                           ;	Extended Instruction Set Enable bit
   450                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   451                           ;	Background Debugger Enable bit
   452                           ;	DEBUG = 0x1, unprogrammed default
   453  300006                     	org	3145734
   454  300006  85                 	db	133
   455                           
   456                           ; Padding undefined space
   457  300007                     	org	3145735
   458  300007  FF                 	db	255
   459                           
   460                           ;Config register CONFIG5L @ 0x300008
   461                           ;	Code Protection Block 0
   462                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   463                           ;	Code Protection Block 1
   464                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   465                           ;	Code Protection Block 2
   466                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   467                           ;	Code Protection Block 3
   468                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   469  300008                     	org	3145736
   470  300008  0F                 	db	15
   471                           
   472                           ;Config register CONFIG5H @ 0x300009
   473                           ;	Boot Block Code Protection bit
   474                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   475                           ;	Data EEPROM Code Protection bit
   476                           ;	CPD = OFF, Data EEPROM not code-protected
   477  300009                     	org	3145737
   478  300009  C0                 	db	192
   479                           
   480                           ;Config register CONFIG6L @ 0x30000A
   481                           ;	Write Protection Block 0
   482                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   483                           ;	Write Protection Block 1
   484                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   485                           ;	Write Protection Block 2
   486                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   487                           ;	Write Protection Block 3
   488                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   489  30000A                     	org	3145738
   490  30000A  0F                 	db	15
   491                           
   492                           ;Config register CONFIG6H @ 0x30000B
   493                           ;	Configuration Register Write Protection bit
   494                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   495                           ;	Boot Block Write Protection bit
   496                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   497                           ;	Data EEPROM Write Protection bit
   498                           ;	WRTD = OFF, Data EEPROM not write-protected
   499  30000B                     	org	3145739
   500  30000B  E0                 	db	224
   501                           
   502                           ;Config register CONFIG7L @ 0x30000C
   503                           ;	Table Read Protection Block 0
   504                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   505                           ;	Table Read Protection Block 1
   506                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   507                           ;	Table Read Protection Block 2
   508                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   509                           ;	Table Read Protection Block 3
   510                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   511  30000C                     	org	3145740
   512  30000C  0F                 	db	15
   513                           
   514                           ;Config register CONFIG7H @ 0x30000D
   515                           ;	Boot Block Table Read Protection bit
   516                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   517  30000D                     	org	3145741
   518  30000D  40                 	db	64
   519                           tosu	equ	0xFFF
   520                           tosh	equ	0xFFE
   521                           tosl	equ	0xFFD
   522                           stkptr	equ	0xFFC
   523                           pclatu	equ	0xFFB
   524                           pclath	equ	0xFFA
   525                           pcl	equ	0xFF9
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           prodh	equ	0xFF4
   531                           prodl	equ	0xFF3
   532                           indf0	equ	0xFEF
   533                           postinc0	equ	0xFEE
   534                           postdec0	equ	0xFED
   535                           preinc0	equ	0xFEC
   536                           plusw0	equ	0xFEB
   537                           fsr0h	equ	0xFEA
   538                           fsr0l	equ	0xFE9
   539                           wreg	equ	0xFE8
   540                           indf1	equ	0xFE7
   541                           postinc1	equ	0xFE6
   542                           postdec1	equ	0xFE5
   543                           preinc1	equ	0xFE4
   544                           plusw1	equ	0xFE3
   545                           fsr1h	equ	0xFE2
   546                           fsr1l	equ	0xFE1
   547                           bsr	equ	0xFE0
   548                           indf2	equ	0xFDF
   549                           postinc2	equ	0xFDE
   550                           postdec2	equ	0xFDD
   551                           preinc2	equ	0xFDC
   552                           plusw2	equ	0xFDB
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                     _configTMR2_PWM
 ---------------------------------------------------------------------------------
 (1) _configTMR2_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configTMR2_PWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1       8       1        8.4%
BITBIGSFRl          34      0       0      20        0.0%
BITBIGSFRhhh        33      0       0      16        0.0%
BITBIGSFRhlh        1E      0       0      18        0.0%
BITBIGSFRhhl         B      0       0      17        0.0%
BITBIGSFRhll         9      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      21        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 16 09:42:14 2022

                      _D 0007                        _a 0004                        _b 0003  
                      _i 0005                        _j 0001                       l36 7F46  
                     l37 7F98                       l46 7F2E                       l39 7FA2  
                     u10 7F98                       u11 7F94                       u20 7FE8  
                     u21 7FE4                       u37 7F6E                       u47 7FCA  
                    l730 7F2A                      l722 7F1C                      l732 7F2C  
                    l724 7F1E                      l740 7F3A                      l726 7F22  
                    l750 7F68                      l742 7F3E                      l734 7F30  
                    l728 7F26                      l760 7FE8                      l752 7F7C  
                    l736 7F32                      l754 7FAA                      l738 7F36  
                    l756 7FC4                      l748 7F4E                      l758 7FDA  
                    _PR2 000FCB                      wreg 000FE8                     _PIR1 000F9E  
                   _TMR2 000FCC                     _main 7F30                     start 0000  
           ___param_bank 000000                    ?_main 0008                    _T2CON 000FCA  
                  _TRISC 000F94                    status 000FD8          __initialization 7F0E  
           __end_of_main 8000         ??_configTMR2_PWM 0008                   ??_main 0008  
          __activetblptr 000000                   _CCPR1L 000FBE                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 7F16            ___rparam_used 000001  
         __pcstackCOMRAM 0008               __pnvCOMRAM 0005                  _CCP1CON 000FBD  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F0E  
                __ramtop 0600                  __ptext0 7F30                  __ptext1 7F1C  
   end_of_initialization 7F16              _CCP1CONbits 000FBD      start_initialization 7F0E  
            __pbssCOMRAM 0001           _configTMR2_PWM 7F1C                 __Hrparam 0000  
               __Lrparam 0000   __end_of_configTMR2_PWM 7F30                 isa$xinst 000000  
        ?_configTMR2_PWM 0008  
